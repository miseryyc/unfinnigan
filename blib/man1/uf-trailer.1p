.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "UF-TRAILER 1p"
.TH UF-TRAILER 1p "2011-06-20" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
uf\-trailer \- examine the ScanEvent structures in a Finnigan raw file "trailer"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
uf-trailer [options] file
.PP
.Vb 1
\& Options:
\&
\&  \-a[ll]                         process all ScanEvent objects
\&  \-c[oefficients]                print the table of conversion coefficients
\&  \-n[unmber] <n:0+n>             extract ScanEvent number <n>
\&  \-range <from:0+n> .. <to:0+n>  extract ScanEvent objects with numbers between <from> and <to>
\&  \-d[ump]                        dump all data in each ScanEvent
\&  \-h[tml]                        dump as html
\&  \-w[iki]                        dump in wiki table format
\&  \-r[elative]                    show relative addersess in dump
\&  <file>                         input file
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-help\fR" 4
.IX Item "-help"
Print a brief help message and exits.
.IP "\fB\-d[ump]\fR" 4
.IX Item "-d[ump]"
Prints a table listing all fields in ScanEvent entries, with their seek
addresses, sizes, names and values. Individual entries can be selected
with the \fB\-n[umber]\fR option or with the \fB\-range\fR option.
.IP "\fB\-n[umber]\fR" 4
.IX Item "-n[umber]"
Gives the number of a single ScanEvent to process
.IP "\fB\-r[ange]\fR" 4
.IX Item "-r[ange]"
Selects a range of the ScanEvent records to process
.IP "\fB\-h[tml]\fR" 4
.IX Item "-h[tml]"
Format the dump output as an html table. When multiple entries are
specified, each will be rendered in its own table
.IP "\fB\-w[iki]\fR" 4
.IX Item "-w[iki]"
Format the dump output as a wiki table.
.IP "\fB\-r[elative]\fR" 4
.IX Item "-r[elative]"
Show relative addresses of all itmes in the dump. The default is to
show the absolute seek address. (works with the \-d[ump] option)
.IP "\fB\-a[ll]\fR" 4
.IX Item "-a[ll]"
Process all entries, including those that may lie outside the declared
range. It appears as though it can be possible to find more index
entries in the file than would fit between the first and the last scan
numbers specified in RunHeader/SampleInfo. In that case, in the
absence of the \-all option, the entries will be enumerated according
to ScanIndex, which will be treated as a linked list \*(-- starting with
the entry whose index matches the first scan number.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBuf-trailer\fR can be used to list or dump the ScanEvent records in a
Finnigan raw file. These records are stored in a stream Thermo calls a
\&\*(L"trailer\*(R", which occurs near the end of the file. Now, the \*(L"trailer\*(R"
containing scan event descriptions is not the only stream trailing the
data; apparently, new ones were added as the format evolved, but the
name stuck. The code in Thermo libraries refers to this stream as
\&\*(L"TrailerScanEvent\*(R".
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Finnigan::ScanEvent
.PP
Finnigan::ScanEventPreamble
.PP
Finnigan::FractionCollector
.PP
Finnigan::Reaction
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.ie n .IP "List all scan events in the file using Thermo's short-hand notation known as ""filter line"":" 4
.el .IP "List all scan events in the file using Thermo's short-hand notation known as ``filter line'':" 4
.IX Item "List all scan events in the file using Thermo's short-hand notation known as filter line:"
.Vb 1
\&  uf\-trailer sample.raw
.Ve
.IP "List the first five records:" 4
.IX Item "List the first five records:"
.Vb 1
\&  uf\-trailer \-range 1..5 sample.raw
.Ve
.IP "Dump the fifth ScanEvent with relative addresses:" 4
.IX Item "Dump the fifth ScanEvent with relative addresses:"
.Vb 1
\&  uf\-trailer \-drn 5 sample.raw
.Ve
